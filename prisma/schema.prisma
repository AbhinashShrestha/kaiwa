generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id              Int @id @default(sequence())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  conversations Conversation[]
  seenMessages SeenMessage[]

  accounts Account[]
  messages Message[]
}

model Account {
  id Int @id @default(sequence())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Conversation {
    id Int @id @default(sequence())
    createdAt       DateTime @default(now())
    lastMessageAt DateTime @default(now())
    name String?
    isGroup Boolean?
    
    messages Message[]

    users User[]
}

model Message {
    id Int @id @default(sequence())
    body String?
    image String?
    createdAt DateTime @default(now())

    seen SeenMessage[]

    conversationId Int
    conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
    
    senderId Int
    sender User @relation(fields: [senderId], references: [id], onDelete: Cascade)
}

model SeenMessage {
    userId Int
    messageId Int

    user User @relation(fields: [userId], references: [id])
    message Message @relation(fields: [messageId], references: [id])

    @@id([userId, messageId])
}
